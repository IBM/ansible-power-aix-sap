---
#   Copyright 2022 IBM Corporation
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

###########################################
# tasks file for install_saphostagent
###########################################


###########################################
# Prepare target temp dir
############################################

- name: Prepare target directory {{ insshagnt_dir_temp_managednode }}
  file:
    path: "{{ insshagnt_dir_temp_managednode }}"
    state: absent
    mode: '0755'

- name: Ensure directory {{ insshagnt_dir_temp_managednode }} exists
  file:
    path: "{{ insshagnt_dir_temp_managednode }}"
    state: directory
    mode: '0755'

#####################################################
# Check SAPHOSTAGENT file
#####################################################

- name: Search for SAR files in {{ insshagnt_dir_download_managednode }} directory
  find:
    paths: "{{ insshagnt_dir_download_managednode }}"
    patterns: "*.SAR,*.sar"
  register: insshagnt_input_file_saphostagent_sar_found
  when: insshagnt_input_file_saphostagent_sar is undefined

- name: Error if no SAR file specified or found
  fail:
    msg: "Error: No SAPHOSTAGENT SAR file(s) found in {{ insshagnt_dir_download_managednode }} directory"
  when: insshagnt_input_file_saphostagent_sar is undefined and insshagnt_input_file_saphostagent_sar_found.files|length == 0

- name: Select latest of multiple SAR files
  ansible.builtin.set_fact:
    insshagnt_file_saphostagent_sar: "{{ insshagnt_input_file_saphostagent_sar_found.files | sort(attribute='path') | last }}"
  when: insshagnt_input_file_saphostagent_sar is undefined

- name: Set SAPHOSTAGENT filename variable
  ansible.builtin.set_fact:
    insshagnt_input_file_saphostagent_sar: "{{ insshagnt_file_saphostagent_sar.path | basename }}"
  when: insshagnt_input_file_saphostagent_sar is undefined

- name: Error if no SAPHOSTAGENT SAR found
  fail:
    msg: "Error: SAPHOSTAGENT SAR file neither specified nor found in directory {{ insshagnt_dir_download_managednode }}"
  when: insshagnt_input_file_saphostagent_sar == ""

- name: Copy SAR based SAPHOSTAGENT [{{ insshagnt_input_file_saphostagent_sar }}] to the target directory [{{ insshagnt_dir_temp_managednode }}]
  copy:
    src: "{{ insshagnt_dir_download_managednode }}/{{ insshagnt_input_file_saphostagent_sar }}"
    dest: "{{ insshagnt_dir_temp_managednode }}/{{ insshagnt_input_file_saphostagent_sar }}"
    remote_src: yes

#########################################################
# Check SAPCAR
#########################################################

### Workflow:
###   SAPCAR:
###   Check SAPCAR (insshagnt_file_sapcar)
###    -   provided in variable insshagnt_dir_sapcar_managednode? -> use it
###    -   available     in insshagnt_dir_download_managednode? -> use it
###    -   not available in insshagnt_dir_download_managednode
###        but available in insshagnt_dir_sapcar_default_managednode? -> use it
###    -   not available in either dir -> end playbook

- name: Search for SAPCAR in {{ insshagnt_dir_download_managednode }} directory
  ansible.builtin.stat:
    path: "{{ insshagnt_dir_download_managednode }}/{{ insshagnt_file_sapcar }}"
  register: insshagnt_stat_output

- name: If found, set SAPCAR path variable
  ansible.builtin.set_fact:
    insshagnt_dir_sapcar_managednode: "{{ insshagnt_dir_download_managednode }}"
  when: ( insshagnt_stat_output.stat.exists == true ) and ( insshagnt_stat_output.stat.executable == true )

- name: Search for SAPCAR in {{ insshagnt_dir_sapcar_default_managednode }} folder
  ansible.builtin.stat:
    path: "{{ insshagnt_dir_sapcar_default_managednode }}/{{ insshagnt_file_sapcar }}"
  register: insshagnt_stat_output
  when: insshagnt_dir_sapcar_managednode is undefined

- name: If found, set SAPCAR path variable to default
  ansible.builtin.set_fact:
    insshagnt_dir_sapcar_managednode: "{{ insshagnt_dir_sapcar_default_managednode }}"
  when: ( insshagnt_dir_sapcar_managednode is undefined ) and ( insshagnt_stat_output.stat.exists == true ) and ( insshagnt_stat_output.stat.executable == true )

- name: Error if no SAPCAR file found
  fail:
    msg: "Error: {{ insshagnt_file_sapcar }} not found in {{ insshagnt_dir_download_managednode }} or in {{ insshagnt_dir_sapcar_default_managednode }}"
  when: insshagnt_dir_sapcar_managednode is undefined

######################################################
# Extract and install SAPHOSTAGENT on target host
#######################################################

- name: Extract the SAPHOSTAGENT archive using SAPCAR
  command: >-
    {{ insshagnt_dir_sapcar_managednode }}/{{ insshagnt_file_sapcar }} \
    -xvf {{ insshagnt_dir_temp_managednode }}/{{ insshagnt_input_file_saphostagent_sar }} -manifest SIGNATURE.SMF
  register: insshagnt_cmd_output_extract_sar
  args:
    chdir: "{{ insshagnt_dir_temp_managednode }}"
  changed_when: "'SAPCAR: processing archive' in insshagnt_cmd_output_extract_sar.stdout"


- name: Install SAPHOSTAGENT
  command: "{{ insshagnt_dir_temp_managednode }}/saphostexec -install"
  register: insshagnt_cmd_output_install_saphostagent
  args:
    chdir: "{{ insshagnt_dir_temp_managednode }}"
  changed_when: "'Install service' in insshagnt_cmd_output_install_saphostagent.stdout"


- name: Ensure {{ insshagnt_dir_temp_managednode }} directory is removed from {{ inventory_hostname }}
  file:
    path: "{{ insshagnt_dir_temp_managednode }}"
    state: absent
    mode: '0755'
  when: insshagnt_bool_clean_dir_temp_managednode
