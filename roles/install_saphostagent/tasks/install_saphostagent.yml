---
#   Copyright 2021 IBM Corporation
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

###########################################
# tasks file for install_saphostagent
###########################################

###########################################
# PreCheck SAP Hostagent Filename
###########################################
- name: Check sap_hostagent_sar_file_name variable
  fail:
    msg: "Error: sap_hostagent_sar_file_name is empty. Please define."
  when: sap_hostagent_sar_file_name is none

###########################################
# Prepare target temp dir
############################################
- name: Prepare target directory {{ sap_hostagent_agent_tmp_directory }}
  file:
    path: "{{ sap_hostagent_agent_tmp_directory }}"
    state: absent
    mode: '0755'

- name: Ensure directory {{ sap_hostagent_agent_tmp_directory }} exists
  file:
    path: "{{ sap_hostagent_agent_tmp_directory }}"
    state: directory
    mode: '0755'

#####################################################
# Check SAPHOSTAGENT file in Ansible host directory
#####################################################
- name: Check SAPHOSTAGENT files in directory {{ sap_hostagent_download_local_path }}
  find:
    paths: "{{ sap_hostagent_download_local_path }}"
    patterns: "*.SAR,*.sar"
  delegate_to: localhost
  register: sap_hostagent_sar_file_name_found
  when: sap_hostagent_sar_file_name is undefined

- name: Check downloaded SAPHOSTAGENT file(s) found in {{ sap_hostagent_download_local_path }} directory
  fail:
    msg: "Error: No SAPHOSTAGENT SAR file(s) found in {{ sap_hostagent_download_local_path }} directory"
  when: sap_hostagent_sar_file_name is undefined and sap_hostagent_sar_file_name_found.files|length == 0

- name: Get last downloaded SAPHOSTAGENT file
  ansible.builtin.set_fact:
    sap_hostagent_sar_file: "{{ sap_hostagent_sar_file_name_found.files | sort(attribute='path') | last }}"
  when: sap_hostagent_sar_file_name is undefined

- name: Set SAPHOSTAGENT filename variable
  ansible.builtin.set_fact:
    sap_hostagent_sar_file_name: "{{ sap_hostagent_sar_file.path | basename }}"
  when: sap_hostagent_sar_file_name is undefined

- name: Check SAPHOSTAGENT file
  fail:
    msg: "Error: SAPHOSTAGENT not found"
  when: sap_hostagent_sar_file_name == ""

- name: Check SAPHOSTAGENT in directory {{ sap_hostagent_download_local_path }}
  shell:
    chdir: "{{ sap_hostagent_download_local_path }}"
    cmd: 'ls -d {{ sap_hostagent_sar_file_name }} | cat'
  delegate_to: localhost
  register: sap_hostagent_sapcar_available
   
- name: Check SAPHOSTAGENT file
  fail:
    msg: "Error: SAPHOSTAGENT file {{ sap_hostagent_sar_file_name }} not found"
  when: sap_hostagent_sapcar_available.stdout == ""

- name: Copy SAPHOSTAGENT SAR {{ sap_hostagent_sar_file_name }} to target dir {{ sap_hostagent_agent_tmp_directory }}
  copy:
    src: "{{ sap_hostagent_download_local_path }}/{{ sap_hostagent_sar_file_name }}"
    dest: "{{ sap_hostagent_agent_tmp_directory }}/{{ sap_hostagent_sar_file_name }}"

#########################################################
# Check SAPCAR in sapcar directory on Ansible host
#########################################################
- name: Check SAPCAR in dir {{ sap_sapcar_download_local_path }}
  shell:
    chdir: "{{ sap_sapcar_download_local_path }}"
    cmd: 'ls -d {{ sap_hostagent_sapcar_file_name }} | cat'
  delegate_to: localhost
  register: sap_sapcar_sapcar_file_name_last
  when: sap_sapcar_local_path is undefined
  
- name: Set SAPCAR path variable {{ sap_sapcar_download_local_path }}
  ansible.builtin.set_fact:
    sap_sapcar_local_path: "{{ sap_sapcar_download_local_path | default(sap_sapcar_local_path) }}"
  when: sap_sapcar_sapcar_file_name_last.stdout != "" and sap_sapcar_local_path is undefined

###########################################################
# if SAPCAR available, copy it to target host
###########################################################
- name: Copy SAPCAR to target dir {{ sap_hostagent_agent_tmp_directory }}
  copy:
    src: "{{ sap_sapcar_local_path }}/{{ sap_hostagent_sapcar_file_name }}"
    dest: "{{ sap_hostagent_agent_tmp_directory }}/{{ sap_hostagent_sapcar_file_name }}"
    mode: '0755'
  when: sap_sapcar_sapcar_file_name_last.stdout != ""

- name: Set SAPCAR default path variable
  ansible.builtin.set_fact:
    sap_sapcar_local_path: "{{ sap_hostagent_agent_tmp_directory }}"
  when: sap_sapcar_sapcar_file_name_last.stdout != ""
 
###############################################################
# Check SAPCAR in saphostagent directory on Ansible host
###############################################################
- name: Check SAPCAR in dir {{ sap_hostagent_download_local_path }}
  shell:
    chdir: "{{ sap_hostagent_download_local_path }}"
    cmd: 'ls -d {{ sap_hostagent_sapcar_file_name }} | cat'
  delegate_to: localhost
  register: sap_hostagent_sapcar_file_name_last
  when: sap_sapcar_local_path_temp is undefined
   
- name: Set SAPCAR path variable {{ sap_hostagent_download_local_path }} to copy
  ansible.builtin.set_fact:
    sap_sapcar_local_path_temp: "{{ sap_hostagent_download_local_path | default(sap_sapcar_local_path) }}"
  when: sap_sapcar_local_path is undefined and sap_sapcar_local_path_temp is undefined and sap_hostagent_sapcar_file_name_last.stdout != ""
 
###########################################################
# if SAPCAR available , copy it to target host
###########################################################
- name: Copy SAPCAR tool to the target host to dir {{ sap_hostagent_agent_tmp_directory }}
  copy:
    src: "{{ sap_sapcar_local_path_temp }}/{{ sap_hostagent_sapcar_file_name }}"
    dest: "{{ sap_hostagent_agent_tmp_directory }}/{{ sap_hostagent_sapcar_file_name }}"
    mode: '0755'
  when: sap_hostagent_sapcar_file_name_last.stdout != "" and sap_sapcar_local_path is undefined

- name: Set SAPCAR default path {{ sap_sapcar_local_path_temp}} variable
  ansible.builtin.set_fact:
    sap_sapcar_local_path: "{{ sap_hostagent_agent_tmp_directory }}"
  when: sap_hostagent_sapcar_file_name_last.stdout != "" and sap_sapcar_local_path is undefined
  
###############################################################################
# if SAPCAR not available in Ansible host directories, check in the target dir
################################################################################
- name: Check SAPCAR in {{ sap_sapcar_local_path_default }} dir
  shell:
    chdir: "{{ sap_sapcar_local_path_default }}"
    cmd: 'ls -d {{ sap_hostagent_sapcar_file_name }} | cat'
  register: sap_hostagent_sapcar_remote_available
  when: sap_sapcar_local_path is undefined

- name: Set SAPCAR default path {{ sap_hostagent_sapcar_remote_available.stdout }} variable
  ansible.builtin.set_fact:
    sap_sapcar_local_path: "{{ sap_sapcar_local_path_default }}"
  when: sap_sapcar_local_path is undefined and sap_sapcar_local_path_temp is undefined and sap_hostagent_sapcar_remote_available.stdout != ""


###########################################
# end playbook, if sapcar not available
###########################################
- name: Check SAPCAR file in {{ sap_sapcar_local_path}}
  fail:
    msg: "Error: SAPCAR not found"
  when: sap_sapcar_local_path is undefined


######################################################
# Extract and install SAPHOSTAGENT on target host
#######################################################
- name: Extract SAPHOSTAGENT using SAPCAR from {{ sap_sapcar_local_path }}
  command: >-
    {{ sap_sapcar_local_path }}/{{ sap_hostagent_sapcar_file_name }} \
    -xvf {{ sap_hostagent_agent_tmp_directory }}/{{ sap_hostagent_sar_file_name }} -manifest SIGNATURE.SMF
  register: extractagent
  args:
    chdir: "{{ sap_hostagent_agent_tmp_directory }}"
  changed_when: "'SAPCAR: processing archive' in extractagent.stdout"

- name: Install SAPHOSTAGENT
  command: "{{ sap_hostagent_agent_tmp_directory }}/saphostexec -install"
  register: installagent
  args:
    chdir: "{{ sap_hostagent_agent_tmp_directory }}"
  changed_when: "'Install service' in installagent.stdout"

- name: Ensure {{ sap_hostagent_agent_tmp_directory }} directory is removed from {{ inventory_hostname }}
  file:
    path: "{{ sap_hostagent_agent_tmp_directory }}"
    state: absent
    mode: '0755'
  when: sap_hostagent_clean_tmp_directory

