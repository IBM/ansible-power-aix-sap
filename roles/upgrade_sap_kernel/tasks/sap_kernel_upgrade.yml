---
#   Copyright 2021 IBM Corporation
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

###########################################
# tasks file for sap_kernel_upgrade
###########################################

##############################
# PreCheck sap_sid
##############################
- name: Check sap_sid variable
  fail:
    msg: "Error: sap_sid is empty or not defined. Please define."
  when: (sap_sid is not defined) or (sap_sid is none)
  
##############################
# Prepare target dir
##############################
- name: check target working directory {{ sap_kernel_upgrade_tmp_dir }}
  file:
    path: "{{ sap_kernel_upgrade_tmp_dir }}"
    state: absent
    owner: "{{ sap_adm }}"
    group: "{{ sap_sys }}"
    mode: 0755

- name: check target working directory {{ sap_kernel_upgrade_tmp_dir }}
  file:
    path: "{{ sap_kernel_upgrade_tmp_dir }}"
    state: directory
    owner: "{{ sap_adm }}"
    group: "{{ sap_sys }}"
    mode: 0755

##############################
# Prepare target temp dir
##############################
- name: check existing directory {{ sap_kernel_upgrade_dest_dir }}
  file:
    path: "{{ sap_kernel_upgrade_dest_dir }}"
    state: absent
    owner: "{{ sap_adm }}"
    group: "{{ sap_sys }}"
    mode: 0755

- name: check existing directory {{ sap_kernel_upgrade_dest_dir }}
  file:
    path: "{{ sap_kernel_upgrade_dest_dir }}"
    state: directory
    owner: "{{ sap_adm }}"
    group: "{{ sap_sys }}"
    mode: 0755
   
#########################################################
# Check SAPCAR in sapcar directory on Ansible host
#########################################################
- name: Check {{ sap_sapcar_file_name }} in dir {{ sap_sapcar_download_local_path }}
  shell:
    chdir: "{{ sap_sapcar_download_local_path }}"
    cmd: 'ls -d {{ sap_sapcar_file_name }} | cat'
  delegate_to: localhost
  register: sap_sapcar_sapcar_file_name_last
  when: sap_sapcar_local_path is undefined
  
- name: Set SAPCAR path variable {{ sap_sapcar_download_local_path }}
  ansible.builtin.set_fact:
    sap_sapcar_local_path: "{{ sap_sapcar_download_local_path | default(sap_sapcar_local_path) }}"
  when: sap_sapcar_sapcar_file_name_last.stdout != "" and sap_sapcar_local_path is undefined

###########################################################
# if SAPCAR available, copy it to target host
###########################################################
- name: Copy SAPCAR to target dir {{ sap_kernel_upgrade_dest_dir }}
  copy:
    src: "{{ sap_sapcar_local_path }}/{{ sap_sapcar_file_name }}"
    dest: "{{ sap_kernel_upgrade_dest_dir }}/{{ sap_sapcar_file_name }}"
    mode: '0755'
  when: sap_sapcar_sapcar_file_name_last.stdout != ""

- name: Set SAPCAR default path variable
  ansible.builtin.set_fact:
    sap_sapcar_local_path: "{{ sap_kernel_upgrade_dest_dir }}"
  when: sap_sapcar_sapcar_file_name_last.stdout != ""
 
###############################################################
# Check SAPCAR in sapupgrade directory on Ansible host
###############################################################
- name: Check {{ sap_sapcar_local_path }} SAPCAR in dir {{ sap_kernel_upgrade_download_local_path }}
  shell:
    chdir: "{{ sap_kernel_upgrade_download_local_path }}"
    cmd: 'ls -d {{ sap_sapcar_file_name }} | cat'
  delegate_to: localhost
  register: sap_sapcar_file_name_last
  when: sap_sapcar_local_path_temp is undefined
   
- name: Set SAPCAR path variable {{ sap_kernel_upgrade_download_local_path }} to copy
  ansible.builtin.set_fact:
    sap_sapcar_local_path_temp: "{{ sap_kernel_upgrade_download_local_path | default(sap_sapcar_local_path) }}"
  when: sap_sapcar_local_path is undefined and sap_sapcar_local_path_temp is undefined and sap_sapcar_file_name_last.stdout != ""
 
###########################################################
# if SAPCAR available , copy it to target host
###########################################################
- name: Copy SAPCAR tool to the target host to dir {{ sap_kernel_upgrade_dest_dir }}
  copy:
    src: "{{ sap_sapcar_local_path_temp }}/{{ sap_sapcar_file_name }}"
    dest: "{{ sap_kernel_upgrade_dest_dir }}/{{ sap_sapcar_file_name }}"
    mode: '0755'
  when: sap_sapcar_file_name_last.stdout != "" and sap_sapcar_local_path is undefined

- name: Set SAPCAR default path {{ sap_sapcar_local_path_temp}} variable
  ansible.builtin.set_fact:
    sap_sapcar_local_path: "{{ sap_kernel_upgrade_dest_dir }}"
  when: sap_sapcar_file_name_last.stdout != "" and sap_sapcar_local_path is undefined
  
###############################################################################
# if SAPCAR not available in Ansible host directories, check in the target dir
################################################################################
- name: Check SAPCAR in {{ sap_sapcar_local_path_default }} dir
  shell:
    chdir: "{{ sap_sapcar_local_path_default }}"
    cmd: 'ls -d {{ sap_sapcar_file_name }} | cat'
  register: sap_upgrade_sapcar_remote_available
  when: sap_sapcar_local_path is undefined
  
- name: Set SAPCAR default path {{ sap_upgrade_sapcar_remote_available.stdout }} variable
  ansible.builtin.set_fact:
    sap_sapcar_local_path: "{{ sap_sapcar_local_path_default }}"
  when: sap_sapcar_local_path is undefined and sap_sapcar_local_path_temp is undefined and sap_upgrade_sapcar_remote_available.stdout != ""

###########################################
# end playbook, if sapcar not available
###########################################
- name: Check SAPCAR file in {{ sap_sapcar_local_path}}
  fail:
    msg: "Error: SAPCAR not found"
  when: sap_sapcar_local_path is undefined

#########################################################
# Check if SAR files available
##########################################################
- name: Check SAR files in folder {{ sap_kernel_upgrade_download_local_path }}
  find:
    paths: "{{ sap_kernel_upgrade_download_local_path }}"
    patterns: '*.sar,*.SAR'
  delegate_to: localhost
  register: sap_sar_file_name

#########################################################
# end, if sar files not available in Ansible Host
##########################################################
- name: Check SAR files
  fail:
    msg: "Error: expected 4 provided SAR files {{ sap_kernel_upgrade_download_local_path }}"
  when: sap_sar_file_name.matched != 4

######################################
# Upload resources to target temp dir
######################################
- name: upload SAR resources to target temp dir {{ sap_kernel_upgrade_dest_dir }}
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ sap_kernel_upgrade_dest_dir }}"
    owner: "{{ sap_adm }}"
    group: "{{ sap_sys }}"
    mode: 0755
  with_fileglob:
    - "{{ sap_kernel_upgrade_download_local_path }}/*.SAR"
    - "{{ sap_kernel_upgrade_download_local_path }}/*.sar"

########################################################
# Extract resources from target temp dir to target dir
########################################################
- name: Extract sar files to interims target dir {{ sap_kernel_upgrade_tmp_dir }}
  become_user: "{{ sap_adm }}"
  become: yes
  shell: "ls {{ sap_kernel_upgrade_dest_dir }}/*.*(sar|SAR)* | xargs -n1 {{ sap_sapcar_local_path }}/{{ sap_sapcar_file_name }} -xvf"
  environment:
    LIBPATH: "{{ sap_kernel_upgrade_tmp_dir }}"
  args:
    chdir: "{{ sap_kernel_upgrade_tmp_dir }}"
  register: result_files
  failed_when: result_files.rc >= 2
 
###################################
# Rename target dirs
###################################
- name: rename actual working directory on target host {{ sap_kernel_upgrade_dir  }}_original
  become_user: "{{ sap_adm }}"
  become: yes
  shell: mvdir {{ sap_kernel_upgrade_dir  }} {{ sap_kernel_upgrade_dir  }}_original

- name: rename interims working directory to actual working directory
  become_user: "{{ sap_adm }}"
  become: yes
  shell: mvdir {{ sap_kernel_upgrade_tmp_dir }} {{ sap_kernel_upgrade_dir }}

